#!/usr/bin/env python3

import argparse
import sys
import itertools as it
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

def draw(df, out):
    sns.set(style='ticks',font_scale=1.5)
    fig, ax = plt.subplots(figsize=(10, 6))
    plt.subplots_adjust(left=0.1, top=0.95, right=0.95)
    sns.histplot(df, x='Mismatch_rate', binwidth=0.05, binrange=(0,1), stat='probability', kde=True, ax=ax)
    sns.despine()
    plt.xlim((0,1))
    plt.ylim((0,1))
    plt.xlabel('Mismatch rate')
    fig.savefig(out)

def main():
    parser = argparse.ArgumentParser(description='Draw histogram for mismatch rate of all locations')
    parser.add_argument('tsv', type=argparse.FileType('r'), help='Tsv file of mismatch rate, generated by summarize_location.py')
    parser.add_argument('-o', default='mismatch', help='Output plot base name')
    parser.add_argument('-s', action='store_true', help='Split light and heavy strand')
    parser.add_argument('-t', type=int, default=2, help='Minimum threshold of rNMP incorporation per location, default=2')
    args = parser.parse_args()

    # read data
    df = pd.read_csv(args.tsv, sep='\t')
    df = df[df.Total >= args.t]

    # split
    if args.t:
        df_split = df[df.Strand == '+']
        draw(df_split, args.o + '_mismatch_rate_forward.png')
        df_split = df[df.Strand == '-']
        draw(df_split, args.o + '_mismatch_rate_reverse.png')
    draw(df, args.o + '_mismatch_rate.png')

    print('Done!')

if __name__ == '__main__':
    main()
